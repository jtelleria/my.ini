[mysqld]
datadir=C:/Program Files/MariaDB 10.3/data
port=3306

[mysqld]

############################################################################################################################
############################################################################################################################
############################################################################################################################
# MariaDB ROCKSDB Engine Server Variables Performance-Tuning
############################################################################################################################
############################################################################################################################
############################################################################################################################

skip-innodb
default_storage_engine=rocksdb
collation_server = latin1_bin

#############################################################################################################################
# rocksdb_block_size
#############################################################################################################################
# NOTES:
# a) I/O Unit (Not fully Aligned). 
# b) Default is 4KB. 16 KB gives better space savings, but needs extra CPU for decompression. 
# c) Measure trade-offs between 4K, 8K, 16K and 32 K.
# d) Check the size of data of the block cache in DB_BLOCK_CACHE_USAGE Column of the INFORMATION_SCHEMA.ROCKSDB_DBSTATS table.

rocksdb_block_size = 8192 #Default Value: 4096

#############################################################################################################################
# rocksdb_block_cache_size
#############################################################################################################################
# DESCRIPTION: Block_cache size for RocksDB.

# NOTES: RocksDB’s Internal Cache. Similar to innodb_buffer_pool_size, but less important since RocksDB relies on OS cache too.
# Set Variable depending on objective "Commit(kB)" to be set in RAM Memory by the "mysqld" process.

rocksdb_block_cache_size = 1G

#############################################################################################################################
# rocksdb_max_total_wal_size
#############################################################################################################################
# NOTES:
# Control Maximum WAL Size. 
# Setting as large as total InnoDB Log Size would be fine.

rocksdb_max_total_wal_size = 1G # Default: 0

#############################################################################################################################
# rocksdb_max_background_jobs
#############################################################################################################################
# DEFINITION: Maximum number of concurrent background jobs, including flushes  and compactions. RocksDB will automatically 
# decide how to allocate the available job slots to flushes and compactions.
# VALUE RANGE: -1 to 64.
# DEFAULT: 2.
# WARNING: “rocksdb_max_background_compactions” and “rocksdb_max_background_flushes” are going to be DEPRECATED in the future. 
# For now, this options are still respected, in case users have workloads for which our automatic allocation is suboptimal.

rocksdb_max_background_jobs = 6

#############################################################################################################################
# rocksdb_lock_wait_timeout
#############################################################################################################################
# DESCRIPTION: Number of seconds to wait for lock.

rocksdb_lock_wait_timeout = 2 # Default: 1

#############################################################################################################################
# rocksdb_max_open_files
#############################################################################################################################
# NOTE: 
# a) Increase file descriptor limit for mysqld process (Increase nofile in /etc/security/limits.conf)
# b) If setting greater than 0, RocksDB still uses table_cache, which will lock a mutex every time you access the file. 
#    I think you'll see much greater benefit with -1 because then you will not need to go through LRUCache to get the table you 
#    need.

rocksdb_max_open_files = -1 # Default Value: -1

#############################################################################################################################
# rocksdb_db_write_buffer_size
#############################################################################################################################
# DESCRIPTION: This is the maximum size of all Write Buffers across all Collumn Families in the database.
# It represents the amount of data to build up in memory (backed by an unsorted log on disk) across all
# column families before writing to a sorted on-disk file.

# By default this feature is disabled (by being set to 0). You should not need to change it. 

rocksdb_db_write_buffer_size = 0 # Default Value: 0 (Disabled).

#############################################################################################################################
# Other Configurations (CF Options)
#############################################################################################################################
rocksdb_table_cache_numshardbits = 6 			# Default: 6

rocksdb_allow_mmap_reads = 1 				# Default: 0
rocksdb_allow_mmap_writes = 0 				# Default: 0
rocksdb_use_fsync = 0 					# Default: 0
rocksdb_use_adaptive_mutex = 0 				# Default: 0

rocksdb_bytes_per_sync = 512000 			# Default: 0
rocksdb_wal_bytes_per_sync = 4194304 			# Default: 0

rocksdb_compaction_sequential_deletes_count_sd=1 	# Default: 0

rocksdb_compaction_sequential_deletes=199999		# Default: 0
# NOTE: rocksdb_compaction_sequential_deletes: "RocksDB will trigger compaction for the file if it has more than this number 
#                                               sequential deletes per window".

rocksdb_compaction_sequential_deletes_window=200000 	# Default: 0
# NOTE: rocksdb_compaction_sequential_deletes_window: "Size of the window for counting rocksdb_compaction_sequential_deletes".

#############################################################################################################################
# Default cf options for RocksDB.
#############################################################################################################################

rocksdb_default_cf_options="write_buffer_size=512m;max_bytes_for_level_base=1024m;target_file_size_base=128m"

# Optimal 50/50 Snappy: 
# NOTE: write_buffer_size:  Sets the size of a single memtable. Once memtable exceeds this size, it is marked immutable and
#                           a new one is created.It represents the amount of data to build up in memory (backed by an unsorted log on disk) 
#                           before converting to a sorted on-disk file. The default is 64 MB.
#                           You need to budget for 2 x your worst case memory use. If you don't have enough memory for this,
#                           you should reduce this value.
#                          
#                           "You can think of memtables as in-memory write buffers. Each new key-value pair is first written
#                           to the memtable. Memtable size is controlled by the option write_buffer_size. It's usually not a
#                           big memory consumer. However, memtable size is inversely proportional to write amplification
#                           -- the more memory you give to the memtable, the less the write amplification is. 
#                           If you increase your memtable size, be sure to also increase your L1 size! L1 size is controlled by
#                           the option "max_bytes_for_level_base".
#
# max_bytes_for_level_base: Write amplification. max_bytes_for_level_base is total size of level 1. As mentioned, we recommend
#                           that this be around the size of level 0. Each subsequent level is max_bytes_for_level_multiplier
#                           larger than previous one. The default is 10 and we do not recommend changing that.
#                           It could be Set Same Value than "Cache Size".
#
# target_file_size_base:    "Default Value is 64MB". Increasing target_file_size_base will reduce total number of database files, 
#                           which is generally a good thing. We recommend setting target_file_size_base to be 
#                           max_bytes_for_level_base / 10, so that there are 10 files in level 1".
# 
# target_file_size_base:    "Increasing target_file_size_base will reduce total number of database files, which is generally
#                           a good thing. We recommend setting target_file_size_base to be max_bytes_for_level_base / 10,
#                           so that there are 10 files in level 1".

rocksdb_max_subcompactions=4 				# Default: 1
rocksdb_compaction_readahead_size=16m 			# Default: 0
rocksdb_use_direct_reads=0				# Default: 0
rocksdb_use_direct_io_for_flush_and_compaction=ON	# Default: 0

#############################################################################################################################
# Data Loading: rocksdb_commit_in_the_middle
#############################################################################################################################
# DESCRIPTION: Commit rows implicitly every rocksdb_bulk_load_size, on bulk load/insert, update and delete.
# NOTE: Session Variables.

rocksdb_commit_in_the_middle = 1 			# Default: 0

[client]
port=3306
plugin-dir=C:/Program Files/MariaDB 10.3/lib/plugin
